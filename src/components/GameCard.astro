---
import type { Game } from '@/types'

export interface Props {
  game: Game
  variant?: 'grid' | 'list' | 'featured' | 'sidebar' | 'trending' | 'compact'
}

const { game, variant = 'grid' } = Astro.props

// 安全的URL处理
const gameUrl = game.slug
  ? game.slug.startsWith('http')
    ? game.slug
    : `/${game.slug}/`
  : '#'

// 根据当前URL路径检测语言并提供相应的默认描述
const currentUrl = Astro.url.pathname
let defaultDescription = 'Experience this exciting music creation game'

if (currentUrl.startsWith('/zh/')) {
  defaultDescription = '体验这款精彩的音乐创作游戏'
} else if (currentUrl.startsWith('/de/')) {
  defaultDescription = 'Erleben Sie dieses aufregende Musikerstellungsspiel'
} else if (currentUrl.startsWith('/fr/')) {
  defaultDescription = 'Découvrez ce jeu passionnant de création musicale'
} else if (currentUrl.startsWith('/es/')) {
  defaultDescription = 'Experimenta este emocionante juego de creación musical'
} else if (currentUrl.startsWith('/ja/')) {
  defaultDescription = 'このエキサイティングな音楽制作ゲームを体験してください'
} else if (currentUrl.startsWith('/ko/')) {
  defaultDescription = '이 흥미진진한 음악 제작 게임을 경험해보세요'
}

// 处理游戏描述：如果有描述且不为空且不是截断的，则使用；否则使用默认描述
const getGameDescription = (description: string): string => {
  if (
    !description ||
    description.trim() === '' ||
    description.endsWith('isn') ||
    description === 'Whether you'
  ) {
    return defaultDescription
  }
  return description
}
---

{
  variant === 'sidebar' && (
    <a href={gameUrl} class="game-card game-card--sidebar game-card--glass">
      <div class="game-card__image">
        <img src={game.image} alt={game.title} />
        <div class="game-card__overlay"></div>
        <div class="game-card__content">
          <h3 class="game-card__title">{game.title}</h3>
        </div>
      </div>
    </a>
  )
}

{
  variant === 'grid' && (
    <div class="game-card game-card-grid">
      <div class="game-card-image">
        <img src={game.image} alt={game.title} />
        <div class="game-card-overlay">
          <button class="game-card-play-button">
            <i class="fas fa-play" />
          </button>
        </div>
      </div>
      <div class="game-card-content">
        <h3 class="game-card-title">{game.title}</h3>
        <p class="game-card-description">
          {getGameDescription(game.description)}
        </p>
      </div>
    </div>
  )
}

{
  variant === 'featured' && (
    <div class="game-card game-card--featured game-card--solid">
      <div class="game-card__image">
        <img src={game.image} alt={game.title} />
        <div class="game-card__overlay">
          <button class="game-card__play-button">
            <i class="fas fa-play" />
          </button>
        </div>
      </div>
      <div class="game-card__content">
        <h3 class="game-card__title">{game.title}</h3>
        <p class="game-card__description">
          {getGameDescription(game.description)}
        </p>
      </div>
    </div>
  )
}

{
  variant === 'trending' && (
    <a href={gameUrl} class="game-card game-card--trending game-card--solid">
      <div class="game-card__image">
        <img src={game.image} alt={game.title} />
        <div class="game-card__overlay"></div>
        <div class="game-card__content">
          <h3 class="game-card__title">{game.title}</h3>
        </div>
      </div>
    </a>
  )
}

{
  variant === 'compact' && (
    <a href={gameUrl} class="game-card game-card--compact game-card--glass">
      <div class="game-card__image">
        <img src={game.image} alt={game.title} />
        <div class="game-card__overlay"></div>
        <div class="game-card__content">
          <h3 class="game-card__title">{game.title}</h3>
        </div>
      </div>
    </a>
  )
}
