---
import { AudioSlider } from '@/components/AudioSlider'
export interface Props {
  uniqueId: string;
  showProgress?: boolean;
  useSlider?: boolean;
  className?: string;
}

const {
  uniqueId,
  showProgress = true,
  useSlider = true,
  className = ""
} = Astro.props;
---

{showProgress && (
  <div class={`audio-progress-container flex-1 ${className}`}>
    {useSlider ? (
      <div class="audio-slider-wrapper w-full">
        {/**
         * AURA-X: Add - 集成 React 进度条组件，使用 client:idle 按需水合。
         * Confirmed via 寸止。
         */}
        <AudioSlider client:idle audioId={uniqueId} className="w-full" />
      </div>
    ) : (
      <!-- Fallback progress bar -->
      <div
        class="fallback-progress-bar w-full h-2 bg-muted rounded-full cursor-pointer relative overflow-hidden"
        role="progressbar"
        aria-valuemin="0"
        aria-valuemax="100"
        aria-valuenow="0"
        aria-label="Audio progress"
        aria-describedby={`current-time-${uniqueId} duration-${uniqueId}`}
        tabindex="0"
      >
        <div
          class="progress-fill audio-progress-bar h-full bg-primary rounded-full transition-all duration-100 ease-linear"
          style="width: 0%"
        ></div>

        <!-- Interactive overlay for click handling -->
        <div class="absolute inset-0 cursor-pointer"></div>
      </div>
    )}
  </div>
)}

<style>
  .audio-progress-container {
    display: flex;
    align-items: center;
  }

  .audio-slider-wrapper {
    width: 100%;
  }

  .fallback-progress-bar {
    cursor: pointer;
  }

  .fallback-progress-bar:focus {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
  }

  .fallback-progress-bar:hover .progress-fill {
    background-color: hsl(var(--primary) / 0.8);
  }

  /* Touch-friendly progress bar */
  @media (hover: none) and (pointer: coarse) {
    .fallback-progress-bar {
      height: 8px; /* Larger touch target */
      border-radius: 4px;
    }

    .progress-fill {
      border-radius: 4px;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .fallback-progress-bar {
      border: 1px solid;
    }

    .progress-fill {
      border: 1px solid hsl(var(--primary));
    }
  }

  /* Keyboard navigation */
  .fallback-progress-bar:focus-visible {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
  }
</style>

<script type="module" src={Astro.resolve('@/scripts/audio/progress-fallback.js')}></script>
