---
import GameCard from './GameCard.astro';

interface Props {
  games: Array<{
    slug: string;
    data: {
      title: string;
      image: string;
      category: string;
      description: string;
    };
  }>;
  title?: string;
  variant?: 'grid' | 'list' | 'simple';
}

const { games, title, variant = 'grid' } = Astro.props;
---

{title && <h2 class="games-list-title">{title}</h2>}

{variant === 'grid' && (
  <div class="game-grid">
    {games.map((game) => (
      <div class="game">
        <a href={`/${game.slug}/`} title={game.data.title}>
          <div class="game-logo game-l-2">
            <img src={game.data.image} alt={game.data.title} />
          </div>
          <p>{game.data.title}</p>
        </a>
      </div>
    ))}
  </div>
)}

{variant === 'list' && (
  <div class="games-list">
    {games.map((game) => (
      <GameCard game={{ slug: game.slug, ...game.data }} variant="compact" />
    ))}
  </div>
)}

{variant === 'simple' && (
  <ul class="games-simple-list">
    {games.map((game) => (
      <li>
        <a href={`/${game.slug}/`} title={game.data.title}>
          <img src={game.data.image} alt={game.data.title} />
          <div class="title">{game.data.title}</div>
        </a>
      </li>
    ))}
  </ul>
)}

<style>
  .games-list-title {
    font-size: var(--font-size-2xl);
    font-weight: var(--font-weight-bold);
    text-align: center;
    margin-bottom: var(--space-8);
    color: var(--color-gray-900);
  }

  .game-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: var(--space-6);
    margin-bottom: var(--space-8);
  }

  .game {
    text-align: center;
    transition: transform 0.3s ease;
  }

  .game:hover {
    transform: translateY(-8px);
  }

  .game a {
    text-decoration: none;
    color: var(--color-gray-900);
    display: block;
  }

  .game-logo {
    width: 100%;
    height: 200px;
    overflow: hidden;
    border-radius: var(--border-radius-lg);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: var(--space-3);
    background: var(--color-gray-100);
  }

  .game-logo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .game p {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    margin: 0;
  }

  .games-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }

  .games-simple-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .games-simple-list li {
    transition: transform 0.3s ease;
  }

  .games-simple-list li:hover {
    transform: translateX(8px);
  }

  .games-simple-list a {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    text-decoration: none;
    color: var(--color-gray-900);
    padding: var(--space-3);
    border-radius: var(--border-radius-lg);
    background: var(--color-gray-50);
    transition: background-color 0.3s ease;
  }

  .games-simple-list a:hover {
    background: var(--color-gray-100);
  }

  .games-simple-list img {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: var(--border-radius-md);
  }

  .games-simple-list .title {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
  }

  @media (max-width: 768px) {
    .game-grid {
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: var(--space-4);
    }

    .game-logo {
      height: 150px;
    }
  }
</style>