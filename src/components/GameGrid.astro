---
import type { Game } from '@/types';
import GameCard from './GameCard.astro';
import GameGridSkeleton from './GameGridSkeleton.astro';

export interface Props {
  games: Game[];
  title?: string;
  variant?: 'standard' | 'featured' | 'compact';
  moreLink?: string;
  className?: string;
  showTitle?: boolean;
  loading?: boolean;
  loadingCount?: number;
}

const {
  games,
  title,
  variant = 'standard',
  moreLink,
  className = '',
  showTitle = true,
  loading = false,
  loadingCount = 8
} = Astro.props;

// Define ONE unified responsive grid class to keep card size consistent across sections
const unifiedGrid = 'grid gap-4 md:gap-5 lg:gap-6 xl:gap-8 grid-cols-1 xs:grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4';
const gridClasses = {
  standard: unifiedGrid,
  featured: unifiedGrid,
  compact: unifiedGrid
};

// Map grid variants to GameCard variants (structure only; size is unified by grid)
const cardVariants = {
  standard: 'grid' as const,
  featured: 'grid' as const,
  compact: 'grid' as const
};

// Container classes for proper spacing and responsive behavior with safe areas
const containerClasses = 'responsive-container container-wide safe-area-left safe-area-right';
---

<section class={`games-grid-section ${className}`}>
  <div class={containerClasses}>
    {showTitle && title && (
      <h2 class="text-2xl md:text-3xl font-bold text-foreground mb-6 md:mb-8">
        {title}
      </h2>
    )}

    {loading ? (
      <GameGridSkeleton variant={variant} count={loadingCount} />
    ) : (
      <div class={`games-grid ${gridClasses[variant]}`} data-game-grid>
        {games.map((game) => (
          <GameCard game={game} variant={cardVariants[variant]} />
        ))}
      </div>
    )}

    {moreLink && !loading && (
      <div class="flex justify-center mt-8 md:mt-12">
        <a
          href={moreLink}
          class="inline-flex items-center justify-center px-6 py-3 text-base font-medium text-primary-foreground bg-primary rounded-lg hover:bg-primary/90 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
        >
          More Games
          <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </a>
      </div>
    )}
  </div>
</section>
