---
interface Props {
  category?: string;
  title?: string;
  description?: string;
  showBackButton?: boolean;
  backButtonText?: string;
  backButtonUrl?: string;
}

const {
  category = 'games',
  title = 'No Games Found',
  description = 'There are currently no games available in this category. Please check back later or browse other categories.',
  showBackButton = true,
  backButtonText = 'Browse All Games',
  backButtonUrl = '/games/',
} = Astro.props;
---

<div class="empty-state">
  <div class="empty-state-content">
    <!-- Empty State Icon -->
    <div class="empty-state-icon">
      <svg
        width="64"
        height="64"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="1.5"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <rect width="18" height="18" x="3" y="3" rx="2"/>
        <path d="M9 9h6v6H9z"/>
        <path d="m15 9-6 6"/>
        <path d="m9 9 6 6"/>
      </svg>
    </div>

    <!-- Empty State Text -->
    <h2 class="empty-state-title">{title}</h2>
    <p class="empty-state-description">{description}</p>

    <!-- Action Buttons -->
    {showBackButton && (
      <div class="empty-state-actions">
        <a href={backButtonUrl} class="empty-state-button primary">
          {backButtonText}
        </a>
      </div>
    )}
  </div>
</div>

<style>
.empty-state {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  padding: 3rem 1rem;
  text-align: center;
  background: #fafafa;
  border-radius: 12px;
  border: 2px dashed #e0e0e0;
}

.empty-state-content {
  max-width: 400px;
}

.empty-state-icon {
  margin: 0 auto 2rem;
  width: 64px;
  height: 64px;
  color: #9ca3af;
  opacity: 0.7;
}

.empty-state-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: #374151;
  margin: 0 0 1rem;
  line-height: 1.3;
}

.empty-state-description {
  font-size: 1rem;
  color: #6b7280;
  margin: 0 0 2rem;
  line-height: 1.5;
}

.empty-state-actions {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.empty-state-button {
  display: inline-flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.2s ease;
}

.empty-state-button.primary {
  background: #3b82f6;
  color: white;
  border: 2px solid #3b82f6;
}

.empty-state-button.primary:hover {
  background: #2563eb;
  border-color: #2563eb;
  transform: translateY(-1px);
}

.empty-state-button.secondary {
  background: white;
  color: #374151;
  border: 2px solid #d1d5db;
}

.empty-state-button.secondary:hover {
  border-color: #9ca3af;
  background: #f9fafb;
}

@media (max-width: 640px) {
  .empty-state {
    min-height: 300px;
    padding: 2rem 1rem;
  }
  
  .empty-state-title {
    font-size: 1.25rem;
  }
  
  .empty-state-description {
    font-size: 0.9rem;
  }
  
  .empty-state-actions {
    flex-direction: column;
  }
}
</style>