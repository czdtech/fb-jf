---
import { getRelativeLocaleUrl } from 'astro:i18n'

interface Props {
  error?: string;
  category?: string;
  showRetry?: boolean;
  fallbackMessage?: string;
}

const {
  error = 'Something went wrong loading the games',
  category = 'games',
  showRetry = true,
  fallbackMessage = 'We encountered an issue loading the games. Please try refreshing the page or contact support if the problem persists.',
} = Astro.props;

const currentLocale = (Astro.currentLocale as any) || 'en';
---

<div class="error-boundary">
  <div class="error-content">
    <!-- Error Icon -->
    <div class="error-icon">
      <svg
        width="48"
        height="48"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="12" cy="12" r="10"/>
        <line x1="12" y1="8" x2="12" y2="12"/>
        <line x1="12" y1="16" x2="12.01" y2="16"/>
      </svg>
    </div>

    <!-- Error Message -->
    <h2 class="error-title">Oops! Something went wrong</h2>
    <p class="error-message">{fallbackMessage}</p>
    
    {error && (
      <details class="error-details">
        <summary>Technical Details</summary>
        <pre class="error-code">{error}</pre>
      </details>
    )}

    <!-- Action Buttons -->
    <div class="error-actions">
      {showRetry && (
        <button 
          onclick="window.location.reload()" 
          class="error-button primary"
        >
          Try Again
        </button>
      )}
      <a href={getRelativeLocaleUrl(currentLocale, '/games/')} class="error-button secondary">
        Browse All Games
      </a>
      <a href={getRelativeLocaleUrl(currentLocale, '/')} class="error-button secondary">
        Go Home
      </a>
    </div>
  </div>
</div>

<style>
.error-boundary {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  padding: 3rem 1rem;
  text-align: center;
  background: #fef2f2;
  border: 2px solid #fecaca;
  border-radius: 12px;
  margin: 2rem 0;
}

.error-content {
  max-width: 500px;
}

.error-icon {
  margin: 0 auto 1.5rem;
  width: 48px;
  height: 48px;
  color: #dc2626;
}

.error-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: #991b1b;
  margin: 0 0 1rem;
  line-height: 1.3;
}

.error-message {
  font-size: 1rem;
  color: #7f1d1d;
  margin: 0 0 1.5rem;
  line-height: 1.5;
}

.error-details {
  margin: 1rem 0 2rem;
  text-align: left;
  background: white;
  border: 1px solid #fecaca;
  border-radius: 6px;
  padding: 1rem;
}

.error-details summary {
  cursor: pointer;
  font-weight: 500;
  color: #991b1b;
  margin-bottom: 0.5rem;
}

.error-details[open] summary {
  margin-bottom: 1rem;
}

.error-code {
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.875rem;
  color: #7f1d1d;
  background: #fef7f7;
  padding: 0.75rem;
  border-radius: 4px;
  overflow-x: auto;
  white-space: pre-wrap;
  word-break: break-all;
}

.error-actions {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.error-button {
  display: inline-flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  border-radius: 8px;
  font-weight: 500;
  text-decoration: none;
  border: 2px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease;
  font-family: inherit;
  font-size: 1rem;
}

.error-button.primary {
  background: #dc2626;
  color: white;
  border-color: #dc2626;
}

.error-button.primary:hover {
  background: #b91c1c;
  border-color: #b91c1c;
  transform: translateY(-1px);
}

.error-button.secondary {
  background: white;
  color: #374151;
  border-color: #d1d5db;
}

.error-button.secondary:hover {
  border-color: #9ca3af;
  background: #f9fafb;
}

@media (max-width: 640px) {
  .error-boundary {
    min-height: 300px;
    padding: 2rem 1rem;
  }
  
  .error-title {
    font-size: 1.25rem;
  }
  
  .error-message {
    font-size: 0.9rem;
  }
  
  .error-actions {
    flex-direction: column;
  }
}
</style>
