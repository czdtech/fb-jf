---
import type { NavigationItem, Language } from '@/types';
import { getRelativeLocaleUrl } from 'astro:i18n';
import LanguageSelector from './LanguageSelector.astro';
import MobileSheetNav from './MobileSheetNav';

export interface Props {
  navigation?: NavigationItem[];
  languages?: Language[];
  currentLang?: string;
  currentPath?: string;
}

const {
  navigation,
  languages,
  currentLang = 'en',
  currentPath = '/'
} = Astro.props;

// 使用 Astro 官方 i18n 生成链接，并规范为以斜杠结尾
const normalizeUrl = (locale: string, path: string): string => {
  const url = getRelativeLocaleUrl(locale, path);
  return url.endsWith('/') ? url : `${url}/`;
};

// 使用提供的导航项或生成默认导航
const navItems = navigation || [
  {
    label: 'Home',
    url: normalizeUrl(currentLang, '/'),
  },
  {
    label: 'All Games',
    url: normalizeUrl(currentLang, '/games'),
  },
  {
    label: 'New Games',
    url: normalizeUrl(currentLang, '/new-games'),
  },
  {
    label: 'Popular',
    url: normalizeUrl(currentLang, '/popular-games'),
  },
  {
    label: 'Trending',
    url: normalizeUrl(currentLang, '/trending-games'),
  },
];

// 使用提供的语言列表或默认值
const langs = languages || [
  { code: 'en', label: 'English' },
  { code: 'zh', label: '中文' },
  { code: 'es', label: 'Español' },
  { code: 'fr', label: 'Français' },
  { code: 'de', label: 'Deutsch' },
  { code: 'ja', label: '日本語' },
  { code: 'ko', label: '한국어' },
];

// 确定激活状态
const isActive = (url: string): boolean => {
  const normalizedPath = currentPath.endsWith('/') ? currentPath : `${currentPath}/`;
  const normalizedUrl = url.endsWith('/') ? url : `${url}/`;
  return normalizedPath === normalizedUrl;
};
---

<nav
  class="sticky top-0 z-30 w-full bg-white/80 backdrop-blur-xl border-b border-gray-200/20 shadow-[0_1px_3px_0_rgb(0,0,0,0.02)]"
  aria-label="Main navigation"
>
  <div class="px-4 sm:px-6 lg:px-8">
    <div class="relative flex h-14 items-center justify-between">
      <div class="flex items-center flex-1">
        <div class="flex items-center space-x-6">
          <a
            href={normalizeUrl(currentLang, '/')}
            class="flex items-center space-x-2 group"
          >
            <svg
              class="w-7 h-7 text-indigo-600 group-hover:scale-110 transition-transform duration-200"
              viewBox="0 0 32 32"
              fill="currentColor"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 2L4 8v8c0 7.18 4.82 13.88 12 15.84C23.18 29.88 28 23.18 28 16V8l-12-6z"/>
              <path
                d="M16 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 10c-2.65 0-8 1.33-8 4v2h16v-2c0-2.67-5.35-4-8-4z"
                fill="white"
                opacity="0.9"
              />
            </svg>
            <span class="text-lg font-bold bg-gradient-to-r from-indigo-600 to-violet-600 bg-clip-text text-transparent">
              FiddleBops
            </span>
          </a>

          <div class="hidden md:block ml-4">
            <nav aria-label="Main menu">
              <ul class="flex items-center space-x-1 overflow-x-auto whitespace-nowrap scrollbar-hide">
                {
                  navItems.map((item) => (
                    <li>
                      <a
                        href={item.url}
                        class:list={[
                          "px-3 py-2 text-[13px] font-medium rounded-lg transition-all duration-200",
                          isActive(item.url)
                            ? "text-indigo-700 bg-indigo-100/50"
                            : "text-gray-600 hover:text-gray-900 hover:bg-gray-100/50"
                        ]}
                        aria-current={isActive(item.url) ? 'page' : undefined}
                      >
                        {item.label}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </nav>
          </div>
        </div>
      </div>

      <div class="hidden md:flex items-center space-x-3">
        <LanguageSelector
          languages={langs}
          currentLang={currentLang}
          currentPath={currentPath}
        />
      </div>

      <div class="md:hidden flex items-center">
        <MobileSheetNav
          client:load
          navigation={navItems}
          languages={langs}
          currentLang={currentLang}
          currentPath={currentPath}
        />
      </div>
    </div>
  </div>
</nav>

<style>
  /* Hide scrollbar but keep functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>
