---
import type { NavigationItem, Language } from '@/types';
import { getTranslation, type SupportedLocale } from '@/i18n/utils';
import { getRelativeLocaleUrl } from 'astro:i18n';
import LanguageSelector from './LanguageSelector.astro';
import MobileSheetNav from './MobileSheetNav';

export interface Props {
  // 保持向后兼容的Props接口
  navigation?: NavigationItem[];
  languages?: Language[];
  currentLang?: string;
  currentPath?: string;
  // 新增i18n支持
  locale?: SupportedLocale;
}

const { 
  navigation: legacyNavigation, 
  languages: legacyLanguages, 
  currentLang: legacyCurrentLang, 
  currentPath = '/',
  locale 
} = Astro.props;

// 获取当前语言 - 使用Astro官方i18n系统
const currentLocale: SupportedLocale = (Astro.currentLocale as SupportedLocale) || locale || (legacyCurrentLang as SupportedLocale) || 'en';

// 获取翻译内容
const translation = await getTranslation(currentLocale);
const uiText = translation.ui;

// 生成导航链接 - 手动构建多语言URL（解决getRelativeLocaleUrl问题）
const buildLocaleUrl = (locale: string, path: string): string => {
  // 确保path以/开头
  const normalizedPath = path.startsWith('/') ? path : `/${path}`;
  
  // 英文使用根路径，其他语言使用语言前缀
  if (locale === 'en') {
    return normalizedPath;
  } else {
    const result = `/${locale}${normalizedPath}`;
    return result;
  }
};

// 如果有legacyNavigation，使用其标签但重新生成URL
const navigationItems = legacyNavigation ? 
  legacyNavigation.map((item, index) => {
    const paths = ['/', '/games', '/new-games', '/popular-games', '/trending-games'];
    return {
      label: item.label,
      url: buildLocaleUrl(currentLocale, paths[index] || '/'),
    };
  }) : [
    {
      label: uiText?.navigation?.home || 'Home',
      url: buildLocaleUrl(currentLocale, '/'),
    },
    {
      label: uiText?.navigation?.allGames || 'ALL Games',
      url: buildLocaleUrl(currentLocale, '/games'),
    },
    {
      label: uiText?.navigation?.newGames || 'New Games', 
      url: buildLocaleUrl(currentLocale, '/new-games'),
    },
    {
      label: uiText?.navigation?.popularGames || 'Popular Games',
      url: buildLocaleUrl(currentLocale, '/popular-games'),
    },
    {
      label: uiText?.navigation?.trendingGames || 'Trending Games',
      url: buildLocaleUrl(currentLocale, '/trending-games'),
    }
  ];

---

<header class="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 shadow-sm safe-area-top">
  <div class="responsive-container flex min-h-[64px] items-center py-2 safe-area-left safe-area-right">
    <!-- Logo with enhanced touch target -->
    <a href={buildLocaleUrl(currentLocale, '/')} class="mr-6 flex items-center space-x-2 touch-target min-h-[44px] py-2">
      <span
        class="text-xl font-bold"
        style="
          background: var(--gradient-primary);
          -webkit-background-clip: text;
          background-clip: text;
          color: transparent;
          -webkit-text-fill-color: transparent;
          display: inline-block;
        "
      >
        FiddleBops
      </span>
    </a>

    <!-- Desktop Navigation using shadcn/ui NavigationMenu -->
    <div class="hidden md:flex md:flex-1 md:min-w-0 overflow-x-auto">
      <nav class="flex flex-nowrap items-center gap-1 whitespace-nowrap">
        {navigationItems.map((item) => {
          // 为了正确比较当前页面，我们需要处理路径匹配
          // currentPath 可能是 /zh/games/ 而 item.url 是 /zh/games
          const isCurrentPage = currentPath === item.url || 
            currentPath === `${item.url}/` || 
            `${currentPath}/` === item.url || 
            currentPath.replace(/\/$/, '') === item.url.replace(/\/$/, '');
            
          return (
            <a
              href={item.url}
              aria-current={isCurrentPage ? 'page' : undefined}
              class={`touch-target inline-flex h-10 min-h-[44px] w-max items-center justify-center rounded-none px-4 py-2 text-sm font-medium border-b-2 transition-colors focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background ${
                isCurrentPage
                  ? 'text-foreground border-primary'
                  : 'text-muted-foreground border-transparent hover:text-foreground hover:border-primary/50'
              }`}
            >
              {item.label}
            </a>
          );
        })}
      </nav>
    </div>

    <div class="flex items-center justify-end space-x-3 shrink-0 ml-auto pl-2 relative z-10">
      <!-- Desktop Language Selector -->
      <div class="hidden md:flex">
        <LanguageSelector currentPath={currentPath || '/'} />
      </div>

      <!-- Mobile: shadcn/ui Sheet Drawer -->
      <div class="md:hidden">
        <MobileSheetNav navigation={navigationItems} languages={legacyLanguages || []} currentPath={currentPath || '/'} client:only="react" />
      </div>
    </div>
  </div>
</header>
