---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Navigation from '@/components/Navigation.astro'
import Footer from '@/components/Footer.astro'
import GameCard from '@/components/GameCard.astro'

// 导入数据
import extractedData from '@/data/extracted-data.json'
const { navigation } = extractedData

// 测试数据
const testGames = Array.from({ length: 12 }, (_, i) => ({
  slug: `test-game-${i + 1}`,
  title: `Test Game ${i + 1}`,
  image: `/img-${(i % 10) + 1}.png`,
  category: i < 4 ? 'popular' : i < 8 ? 'new' : 'trending',
  description: `This is a test game description for game ${i + 1}. It demonstrates the responsive grid layout.`,
  rating: 4.5 + (Math.random() * 0.5)
}))

const meta = {
  title: 'Responsive Grid Test - Fiddlebops',
  description: 'Testing responsive grid layouts',
  canonical: 'https://www.playfiddlebops.com/test-responsive'
}
---

<BaseLayout meta={meta} lang="en">
  <Navigation
    navigation={navigation.main}
    languages={navigation.languages}
    currentLang="en"
    currentPath="/test-responsive"
  />

  <main style="padding: 2rem 0;">
    <div class="container">
      <h1 style="text-align: center; margin-bottom: 3rem; font-size: 2.5rem;">
        响应式网格测试页面
      </h1>

      <!-- 标准网格测试 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          标准网格 (.game-grid--standard)
        </h2>
        <div class="game-grid game-grid--standard">
          {testGames.slice(0, 8).map((game) => (
            <div class="game-grid-item test-card">
              <div class="test-card-image">
                <img src={game.image} alt={game.title} />
              </div>
              <div class="test-card-content">
                <h3>{game.title}</h3>
                <p>{game.description}</p>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- 特色网格测试 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          特色网格 (.game-grid--featured)
        </h2>
        <div class="game-grid game-grid--featured">
          {testGames.slice(0, 12).map((game) => (
            <div class="game-grid-item test-card test-card--compact">
              <div class="test-card-image">
                <img src={game.image} alt={game.title} />
              </div>
              <div class="test-card-content">
                <h4>{game.title}</h4>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- 紧凑网格测试 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          紧凑网格 (.game-grid--compact)
        </h2>
        <div class="game-grid game-grid--compact">
          {testGames.slice(0, 6).map((game) => (
            <div class="game-grid-item test-card">
              <div class="test-card-image">
                <img src={game.image} alt={game.title} />
              </div>
              <div class="test-card-content">
                <h3>{game.title}</h3>
                <p>{game.description.slice(0, 50)}...</p>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- 相关游戏网格测试 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          相关游戏网格 (.game-grid--related)
        </h2>
        <div class="game-grid game-grid--related">
          {testGames.slice(0, 6).map((game) => (
            <div class="game-grid-item test-card">
              <div class="test-card-image">
                <img src={game.image} alt={game.title} />
              </div>
              <div class="test-card-content">
                <h3>{game.title}</h3>
                <p>{game.description}</p>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- 简单网格测试 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          简单网格 (.game-grid--simple)
        </h2>
        <div class="game-grid game-grid--simple">
          {testGames.slice(0, 8).map((game) => (
            <div class="game-grid-item test-card test-card--simple">
              <div class="test-card-image">
                <img src={game.image} alt={game.title} />
              </div>
              <div class="test-card-content">
                <h3>{game.title}</h3>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- 响应式断点信息 -->
      <section style="margin-bottom: 4rem;">
        <h2 style="margin-bottom: 2rem; font-size: 1.8rem; color: #9333ea;">
          响应式断点信息
        </h2>
        <div class="breakpoint-info">
          <div class="breakpoint-item">
            <strong>小型手机:</strong> 479px及以下 - 单列布局
          </div>
          <div class="breakpoint-item">
            <strong>大型手机:</strong> 480px - 767px - 双列布局
          </div>
          <div class="breakpoint-item">
            <strong>平板:</strong> 768px - 1023px - 3-4列布局
          </div>
          <div class="breakpoint-item">
            <strong>桌面:</strong> 1024px+ - 多列自适应布局
          </div>
        </div>
      </section>
    </div>
  </main>

  <Footer />
</BaseLayout>

<style>
  /* 测试卡片样式 */
  .test-card {
    background: white;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-md);
    overflow: hidden;
    transition: all var(--duration-300) var(--ease-in-out);
    border: 1px solid var(--color-gray-200);
  }

  .test-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-xl);
    border-color: var(--color-primary-300);
  }

  .test-card--compact {
    min-height: 120px;
  }

  .test-card--simple {
    min-height: 100px;
  }

  .test-card-image {
    width: 100%;
    height: 150px;
    overflow: hidden;
    background: var(--color-gray-100);
  }

  .test-card--compact .test-card-image {
    height: 80px;
  }

  .test-card--simple .test-card-image {
    height: 100px;
  }

  .test-card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .test-card-content {
    padding: var(--space-4);
  }

  .test-card--compact .test-card-content {
    padding: var(--space-2);
  }

  .test-card--simple .test-card-content {
    padding: var(--space-3);
  }

  .test-card h3, .test-card h4 {
    margin: 0 0 var(--space-2) 0;
    color: var(--color-gray-900);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
  }

  .test-card--compact h4 {
    font-size: var(--font-size-sm);
    margin: 0;
  }

  .test-card--simple h3 {
    font-size: var(--font-size-base);
    margin: 0;
  }

  .test-card p {
    margin: 0;
    color: var(--color-gray-600);
    font-size: var(--font-size-sm);
    line-height: var(--line-height-relaxed);
  }

  .breakpoint-info {
    background: var(--color-gray-50);
    padding: var(--space-6);
    border-radius: var(--border-radius-lg);
    border: 1px solid var(--color-gray-200);
  }

  .breakpoint-item {
    padding: var(--space-3) 0;
    border-bottom: 1px solid var(--color-gray-200);
    font-size: var(--font-size-base);
  }

  .breakpoint-item:last-child {
    border-bottom: none;
  }

  .breakpoint-item strong {
    color: var(--color-primary-600);
  }

  /* 当前断点指示器 */
  .breakpoint-info::before {
    content: '当前断点: 桌面';
    display: block;
    font-weight: bold;
    color: var(--color-primary-700);
    margin-bottom: var(--space-4);
    padding: var(--space-2);
    background: var(--color-primary-50);
    border-radius: var(--border-radius-md);
    text-align: center;
  }

  @media (max-width: 1023px) and (min-width: 768px) {
    .breakpoint-info::before {
      content: '当前断点: 平板';
    }
  }

  @media (max-width: 767px) and (min-width: 480px) {
    .breakpoint-info::before {
      content: '当前断点: 大型手机';
    }
  }

  @media (max-width: 479px) {
    .breakpoint-info::before {
      content: '当前断点: 小型手机';
    }
  }
</style>
