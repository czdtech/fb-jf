---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import GameRating from '@/components/GameRating.astro'
import GameIframe from '@/components/GameIframe.astro'
import GameCard from '@/components/GameCard.astro'

// 导入数据
import extractedData from '@/data/extracted-data.json'
const { navigation } = extractedData

export async function getStaticPaths() {
  const allGames = await getCollection('games');
  return allGames.map(game => ({
    params: { slug: game.slug },
    props: { game },
  }));
}

const { game } = Astro.props;
const { Content } = await game.render();
const gameData = { ...game.data, slug: game.slug };
const extendedData = gameData as any;

// Initialize content sections
const featuresContent = null;
const gameplayContent = null;

// Fetch and prepare related games
const allGames = await getCollection('games');
const relatedGames = allGames
  .filter(g => g.data.category === gameData.category && g.slug !== gameData.slug)
  .slice(0, 4)
  .map(g => ({ slug: g.slug, ...g.data }));

// 多语言配置
const hreflangLinks =
  navigation?.languages?.map(lang => ({
    code: lang.code === 'en' ? 'x-default' : lang.code,
    url: `/${gameData.slug}/${lang.code !== 'en' ? lang.url.replace('/', '') + '/' : ''}`,
    label: lang.label,
  })) || []

// SEO配置
const meta = {
  title: extendedData.seo?.title || gameData.meta.title,
  description: extendedData.seo?.description || gameData.meta.description,
  keywords: extendedData.seo?.keywords || gameData.title,
  canonical: extendedData.seo?.canonical || gameData.meta.canonical,
  ogImage: extendedData.seo?.ogImage || gameData.meta.ogImage,
}

// 增强的结构化数据
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Game',
  name: gameData.title,
  description: meta.description,
  url: meta.canonical,
  ...(extendedData.rating && {
    aggregateRating: {
      '@type': 'AggregateRating',
      ratingValue: extendedData.rating.score,
      bestRating: extendedData.rating.maxScore,
      ratingCount: extendedData.rating.votes,
    },
  }),
  ...(extendedData.seo?.schema || {}),
}

// NOTE: The content sections are now rendered via <Content /> from game.render()
// The logic below for contentSections is no longer necessary if the markdown body is sufficient.
// For this refactoring, we will render the markdown content in a dedicated section.

---

<BaseLayout
  meta={meta}
  hreflang={hreflangLinks}
  structuredData={structuredData}
>
  <Header
    navigation={navigation.main}
    languages={navigation.languages}
    currentLang="en"
    currentPath={`/${gameData.slug}/`}
  />

  <!-- 音乐可视化背景 -->
  <div class="music-visualization-bg">
    <div class="music-particles">
      {
        Array.from({ length: 50 }, (_, i) => (
          <div
            class="music-particle"
            style={`--delay: ${i * 0.1}s; --x: ${Math.random() * 100}%; --y: ${Math.random() * 100}%`}
          />
        ))
      }
    </div>
  </div>

  <main class="game-page-enhanced">
    <!-- 首屏左右布局游戏英雄区域 -->
    <section class="game-hero-immersive">
      <div class="hero-atmosphere">
        <div class="hero-wave-1"></div>
        <div class="hero-wave-2"></div>
        <div class="hero-wave-3"></div>
      </div>

      <div class="container">
        <!-- 面包屑导航 -->
        <nav class="breadcrumb-enhanced music-element hero-music-delay-1">
          <a href="/" class="breadcrumb-link">
            <i class="fas fa-home"></i>
            <span>Home</span>
          </a>
          <i class="fas fa-angle-right breadcrumb-separator"></i>
          <span class="breadcrumb-current"
            >{gameData.title}</span
          >
        </nav>

        <!-- 首屏左右布局：游戏信息 + 游戏iframe -->
        <div class="hero-layout-grid">
          <!-- 左侧：游戏信息 -->
          <div class="game-info-card music-element hero-music-delay-2">
            <div class="game-info-content hero-sidebar-effect">
              <div class="game-title-section">
                <h1 class="game-title-enhanced">{gameData.title}</h1>
                <div class="game-badges-container">
                  <div class="game-category-badge">
                    <i class="fas fa-music"></i>
                    <span>{gameData.category}</span>
                  </div>
                  <div class="game-demo-badge">
                    <i class="fas fa-flask"></i>
                    <span>Demo</span>
                  </div>
                  {
                    extendedData.pageType &&
                      extendedData.pageType !== 'traditional' && (
                        <div class="game-type-badge">
                          <i class="fas fa-tag" />
                          <span>{extendedData.pageType}</span>
                        </div>
                      )
                  }
                </div>
              </div>

              <p class="game-description-enhanced">{gameData.description}</p>

              {
                extendedData.rating && (
                  <div class="rating-section music-element hero-music-delay-3">
                    <div class="rating-display">
                      <div class="stars-container">
                        {Array.from({ length: 5 }, (_, i) => (
                          <span
                            class={`star-enhanced ${i < Math.floor(extendedData.rating.score) ? 'filled' : 'empty'}`}
                          >
                            <i class="fas fa-star" />
                          </span>
                        ))}
                      </div>
                      <div class="rating-text">
                        <span class="rating-score">
                          {extendedData.rating.score}
                        </span>
                        <span class="rating-separator">·</span>
                        <span class="rating-votes">
                          {extendedData.rating.votes} reviews
                        </span>
                      </div>
                    </div>
                  </div>
                )
              }

              <div class="action-buttons">
                <button
                  class="play-now-btn music-element hero-music-delay-4"
                  onclick="scrollToGame()"
                >
                  <div class="btn-content">
                    <i class="fas fa-play"></i>
                    <span>Play Now</span>
                  </div>
                  <div class="btn-ripple"></div>
                </button>

                <button
                  class="share-btn music-element hero-music-delay-5"
                  onclick="shareGame()"
                >
                  <i class="fas fa-share-alt"></i>
                  <span>Share</span>
                </button>
              </div>
            </div>
          </div>

          <!-- 右侧：游戏iframe -->
          <div class="hero-game-container music-element hero-music-delay-6">
            <div class="hero-game-header">
              <div class="hero-game-title-bar">
                <h2 class="hero-game-active-title">
                  <i class="fas fa-gamepad"></i>
                  <span>{gameData.title}</span>
                </h2>
                <div class="hero-game-status-indicator">
                  <span class="status-dot"></span>
                  <span>Ready to Play</span>
                </div>
              </div>

              <div class="hero-game-controls">
                <button
                  class="hero-control-btn"
                  onclick="toggleFullscreen()"
                  title="Fullscreen"
                >
                  <i class="fas fa-expand"></i>
                </button>
                <button
                  class="hero-control-btn"
                  onclick="reloadGame()"
                  title="Reload"
                >
                  <i class="fas fa-redo"></i>
                </button>
                <button
                  class="hero-control-btn"
                  onclick="toggleSound()"
                  title="Sound"
                >
                  <i class="fas fa-volume-up"></i>
                </button>
              </div>
            </div>

            <div class="hero-game-iframe-container">
              <div class="hero-game-loading-overlay">
                <div class="loading-spinner">
                  <div class="spinner-music">
                    <i class="fas fa-music"></i>
                  </div>
                  <div class="loading-text">Loading Game...</div>
                </div>
              </div>
              <GameIframe
                id="hero-game-iframe"
                src={gameData.iframe}
                backgroundImage={gameData.image}
              />
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- 游戏特色区域 -->
    {
      (extendedData.features || featuresContent) && (
        <section class="game-features-enhanced">
          <div class="container">
            <div class="section-header-enhanced music-element hero-music-delay-12">
              <h2 class="section-title-enhanced">
                <i class="fas fa-sparkles" />
                <span>Game Features</span>
              </h2>
              <p class="section-subtitle-enhanced">
                Discover what makes this game special
              </p>
            </div>

            <div class="features-showcase">
              {featuresContent && featuresContent.content ? (
                <div class="features-detailed">
                  {featuresContent.content.map(
                    (section: any, sectionIndex: number) => {
                      if (section.type === 'list') {
                        return (
                          <div class="features-grid-enhanced">
                            {section.items.map((item: any, index: number) => (
                              <div
                                class={`feature-card-enhanced music-element hero-music-delay-${13 + sectionIndex + index}`}
                              >
                                <div class="feature-card-content hero-sidebar-effect">
                                  <div class="feature-icon-enhanced">
                                    <i class="fas fa-star" />
                                  </div>
                                  <h4 class="feature-title-enhanced">
                                    {item.title}
                                  </h4>
                                  <p class="feature-description-enhanced">
                                    {item.description}
                                  </p>
                                  <div class="feature-glow-effect" />
                                </div>
                              </div>
                            ))}
                          </div>
                        )
                      }
                      return null
                    }
                  )}
                </div>
              ) : (
                <div class="features-grid-enhanced">
                  {(
                    extendedData.features || [
                      '🎵 Rich music creation tools',
                      '🎭 Diverse character selection',
                      '🔄 Unlimited creative possibilities',
                      '💫 Unique visual effects',
                    ]
                  ).map((feature: any, index: number) => (
                    <div
                      class={`feature-card-enhanced music-element hero-music-delay-${13 + index}`}
                    >
                      <div class="feature-card-content hero-sidebar-effect">
                        <div class="feature-icon-enhanced">
                          <i class="fas fa-music" />
                        </div>
                        <h4 class="feature-title-enhanced">{feature}</h4>
                        <div class="feature-glow-effect" />
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </section>
      )
    }

    <!-- 游戏玩法区域 -->
    {
      (extendedData.howToPlay || gameplayContent) && (
        <section class="game-how-to-play-enhanced">
          <div class="container">
            <div class="section-header-enhanced music-element hero-music-delay-20">
              <h2 class="section-title-enhanced">
                <i class="fas fa-gamepad" />
                <span>How to Play</span>
              </h2>
              <p class="section-subtitle-enhanced">
                Master the art of music creation
              </p>
            </div>

            <div class="how-to-play-content">
              {gameplayContent && gameplayContent.content ? (
                <div class="gameplay-detailed">
                  {gameplayContent.content.map(
                    (section: any, sectionIndex: number) => {
                      if (section.type === 'steps') {
                        return (
                          <div class="steps-container-enhanced">
                            {section.items.map((step: any, index: number) => (
                              <div
                                class={`step-item-enhanced music-element hero-music-delay-${21 + index}`}
                              >
                                <div class="step-number-enhanced">
                                  {index + 1}
                                </div>
                                <div class="step-content-enhanced">
                                  <h4 class="step-title-enhanced">
                                    {step.title}
                                  </h4>
                                  <p class="step-description-enhanced">
                                    {step.description}
                                  </p>
                                </div>
                              </div>
                            ))}
                          </div>
                        )
                      }
                      return null
                    }
                  )}
                </div>
              ) : (
                <div class="steps-container-enhanced">
                  {(
                    extendedData.howToPlay || [
                      'Choose your characters',
                      'Create your mix',
                      'Share your creation',
                    ]
                  ).map((step: any, index: number) => (
                    <div
                      class={`step-item-enhanced music-element hero-music-delay-${21 + index}`}
                    >
                      <div class="step-number-enhanced">{index + 1}</div>
                      <div class="step-content-enhanced">
                        <p class="step-description-enhanced">{step}</p>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </section>
      )
    }

    <!-- 详细内容区域 -->
    <section class="game-content-section">
      <div class="container">
        <div class="content-wrapper-enhanced music-element">
          <div class="content-card-enhanced hero-sidebar-effect">
            <div class="content-body-enhanced prose">
              <Content />
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- 相关游戏区域 -->
    <section class="related-games-enhanced">
      <div class="container">
        <div class="section-header-enhanced music-element hero-music-delay-30">
          <h2 class="section-title-enhanced">
            <i class="fas fa-gamepad"></i>
            <span>More Games Like This</span>
          </h2>
          <p class="section-subtitle-enhanced">Continue your musical journey</p>
        </div>

        <div class="related-games-grid">
          {
            relatedGames.map((relatedGame, index) => (
              <div
                class={`related-game-item music-element hero-music-delay-${31 + index}`}
              >
                <GameCard game={relatedGame} variant="sidebar" />
              </div>
            ))
          }
        </div>
      </div>
    </section>
  </main>

  <Footer />
</BaseLayout>

<script>
  // 游戏控制函数
  function scrollToGame() {
    const heroGame = document.getElementById('hero-game-iframe')
    if (heroGame) {
      heroGame.scrollIntoView({ behavior: 'smooth', block: 'center' })
      heroGame.focus()
    }
  }

  function shareGame() {
    if (navigator.share) {
      navigator.share({
        title: document.title,
        text: 'Check out this awesome music game!',
        url: window.location.href,
      })
    } else {
      // 复制链接到剪贴板
      navigator.clipboard.writeText(window.location.href)
      alert('Game link copied to clipboard!')
    }
  }

  function toggleFullscreen() {
    const heroIframe = document.getElementById('hero-game-iframe')
    const mainIframe = document.getElementById('main-game-iframe')
    const iframe = heroIframe || mainIframe
    const wrapper = iframe?.closest(
      '.hero-game-iframe-container, .game-iframe-container'
    )
    if (wrapper) {
      if (!document.fullscreenElement) {
        wrapper.requestFullscreen()
      } else {
        document.exitFullscreen()
      }
    }
  }

  function reloadGame() {
    const heroIframe = document.getElementById(
      'hero-game-iframe'
    ) as HTMLIFrameElement
    const mainIframe = document.getElementById(
      'main-game-iframe'
    ) as HTMLIFrameElement
    const iframe = heroIframe || mainIframe
    if (iframe) {
      iframe.src = iframe.src
    }
  }

  function toggleSound(event: Event) {
    // 声音控制逻辑
    const btn = event.target as HTMLElement
    const icon = btn.querySelector('i')
    if (icon?.classList.contains('fa-volume-up')) {
      icon.classList.remove('fa-volume-up')
      icon.classList.add('fa-volume-mute')
    } else {
      icon?.classList.remove('fa-volume-mute')
      icon?.classList.add('fa-volume-up')
    }
  }

  // 页面加载完成后的增强效果
  document.addEventListener('DOMContentLoaded', () => {
    // 音乐粒子动画
    const particles = document.querySelectorAll('.music-particle')
    particles.forEach((particle, index) => {
      const element = particle as HTMLElement
      element.style.animationDelay = `${index * 0.1}s`
    })

    // 游戏加载状态
    const heroIframe = document.getElementById(
      'hero-game-iframe'
    ) as HTMLIFrameElement
    const mainIframe = document.getElementById(
      'main-game-iframe'
    ) as HTMLIFrameElement
    const iframe = heroIframe || mainIframe
    const loadingOverlay = document.querySelector(
      '.hero-game-loading-overlay, .game-loading-overlay'
    ) as HTMLElement

    if (iframe && loadingOverlay) {
      iframe.addEventListener('load', () => {
        loadingOverlay.style.opacity = '0'
        setTimeout(() => {
          loadingOverlay.style.display = 'none'
        }, 300)
      })
    }

    // 滚动动画触发
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px',
    }

    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in')
        }
      })
    }, observerOptions)

    document.querySelectorAll('.music-element').forEach(el => {
      observer.observe(el)
    })
  })
</script>

<style>
  /* ==========================================================================
     音乐可视化背景系统
     ========================================================================== */

  .music-visualization-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: var(--hero-main-bg);
    overflow: hidden;
  }

  .music-particles {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  .music-particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: var(--color-primary-400);
    border-radius: 50%;
    opacity: 0.4;
    animation: musicFloat 8s infinite ease-in-out;
    left: var(--x);
    top: var(--y);
  }

  @keyframes musicFloat {
    0%,
    100% {
      transform: translateY(0) scale(0.8);
      opacity: 0.2;
    }
    50% {
      transform: translateY(-30px) scale(1.2);
      opacity: 0.6;
    }
  }

  /* ==========================================================================
     沉浸式英雄区域
     ========================================================================== */

  .game-hero-immersive {
    position: relative;
    min-height: 100vh;
    padding: calc(80px + var(--space-4)) 0 var(--space-4);
    overflow: hidden;
    display: flex;
    align-items: center;
  }

  /* 首屏左右布局网格 */
  .hero-layout-grid {
    display: grid;
    grid-template-columns: 1fr 1.2fr;
    gap: var(--space-8);
    align-items: center;
    min-height: calc(100vh - 160px);
    position: relative;
    z-index: 2;
  }

  /* 右侧游戏容器样式 */
  .hero-game-container {
    position: relative;
    border-radius: var(--border-radius-2xl);
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
    background: var(--color-white);
    height: 600px;
  }

  .hero-game-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-4);
    background: linear-gradient(
      135deg,
      var(--color-gray-50),
      var(--color-gray-100)
    );
    border-bottom: 1px solid var(--color-gray-200);
  }

  .hero-game-title-bar {
    display: flex;
    align-items: center;
    gap: var(--space-4);
  }

  .hero-game-active-title {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-900);
    margin: 0;
  }

  .hero-game-status-indicator {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    font-size: var(--font-size-sm);
    color: var(--color-green-600);
  }

  .hero-game-controls {
    display: flex;
    gap: var(--space-2);
  }

  .hero-control-btn {
    width: 36px;
    height: 36px;
    background: linear-gradient(
      135deg,
      var(--color-primary-400),
      var(--color-primary-500)
    );
    color: white;
    border: none;
    border-radius: var(--border-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .hero-control-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(147, 51, 234, 0.4);
  }

  .hero-game-iframe-container {
    position: relative;
    width: 100%;
    height: calc(600px - 60px);
    background: var(--color-gray-900);
    overflow: hidden;
  }

  .hero-game-loading-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      var(--color-primary-600),
      var(--color-primary-700)
    );
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: white;
    z-index: 10;
    transition: opacity var(--duration-300) ease;
  }

  .hero-wave-1,
  .hero-wave-2,
  .hero-wave-3 {
    position: absolute;
    width: 200%;
    height: 200%;
    background: radial-gradient(
      circle,
      rgba(147, 51, 234, 0.1) 0%,
      transparent 70%
    );
    border-radius: 50%;
    animation: heroWave 20s infinite ease-in-out;
  }

  .hero-wave-1 {
    top: -50%;
    left: -50%;
    animation-delay: 0s;
  }

  .hero-wave-2 {
    top: -30%;
    right: -50%;
    animation-delay: -7s;
  }

  .hero-wave-3 {
    bottom: -50%;
    left: -30%;
    animation-delay: -14s;
  }

  @keyframes heroWave {
    0%,
    100% {
      transform: rotate(0deg) scale(1);
    }
    50% {
      transform: rotate(180deg) scale(1.1);
    }
  }

  /* 面包屑导航增强 */
  .breadcrumb-enhanced {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    margin-bottom: var(--space-6);
    position: relative;
    z-index: 2;
  }

  .breadcrumb-link {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    color: var(--color-primary-600);
    text-decoration: none;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--border-radius-lg);
    transition: all var(--duration-300) var(--ease-in-out);
    background: rgba(255, 255, 255, 0.7);
    backdrop-filter: blur(10px);
  }

  .breadcrumb-link:hover {
    background: rgba(147, 51, 234, 0.1);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(147, 51, 234, 0.2);
  }

  .breadcrumb-separator {
    color: var(--color-primary-400);
    font-size: var(--font-size-xs);
  }

  .breadcrumb-current {
    color: var(--color-gray-600);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
  }

  /* 游戏信息卡片 */
  .game-info-card {
    position: relative;
    z-index: 2;
    max-width: 900px;
    margin: 0 auto;
  }

  .game-info-content {
    padding: var(--space-10);
    text-align: center;
    border-radius: var(--border-radius-2xl);
    position: relative;
    overflow: hidden;
  }

  .game-info-content::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transform: translateX(-100%);
    transition: transform 0.8s ease;
  }

  .game-info-content:hover::before {
    transform: translateX(100%);
  }

  .game-title-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-4);
    margin-bottom: var(--space-6);
  }

  .game-badges-container {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    flex-wrap: wrap;
    justify-content: center;
  }

  .game-title-enhanced {
    font-size: var(--font-size-5xl);
    font-weight: var(--font-weight-bold);
    background: linear-gradient(
      135deg,
      var(--color-primary-600),
      var(--color-primary-700)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-align: center;
    line-height: var(--line-height-tight);
    margin: 0;
  }

  .game-category-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    background: var(--color-primary-100);
    color: var(--color-primary-700);
    border-radius: var(--border-radius-full);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    border: 1px solid var(--color-primary-200);
  }

  .game-demo-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    background: var(--color-orange-100);
    color: var(--color-orange-700);
    border-radius: var(--border-radius-full);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    border: 1px solid var(--color-orange-200);
    animation: demoPulse 2s ease-in-out infinite;
  }

  @keyframes demoPulse {
    0%,
    100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  .game-type-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-4);
    background: var(--color-green-100);
    color: var(--color-green-700);
    border-radius: var(--border-radius-full);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    border: 1px solid var(--color-green-200);
  }

  .game-description-enhanced {
    font-size: var(--font-size-xl);
    color: var(--color-gray-700);
    line-height: var(--line-height-relaxed);
    margin-bottom: var(--space-8);
    max-width: 600px;
  }

  /* 评分系统增强 */
  .rating-section {
    margin-bottom: var(--space-8);
  }

  .rating-display {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-3);
  }

  .stars-container {
    display: flex;
    gap: var(--space-1);
  }

  .star-enhanced {
    font-size: var(--font-size-xl);
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .star-enhanced.filled {
    color: #fbbf24;
    text-shadow: 0 0 10px rgba(251, 191, 36, 0.5);
  }

  .star-enhanced.empty {
    color: var(--color-gray-300);
  }

  .star-enhanced:hover {
    transform: scale(1.2);
  }

  .rating-text {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    font-size: var(--font-size-base);
    color: var(--color-gray-600);
  }

  .rating-score {
    font-weight: var(--font-weight-bold);
    color: var(--color-primary-600);
  }

  .rating-separator {
    color: var(--color-gray-400);
  }

  .rating-votes {
    color: var(--color-gray-500);
  }

  /* 动作按钮组 */
  .action-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-4);
    flex-wrap: wrap;
  }

  .play-now-btn {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: var(--space-5) var(--space-10);
    background: linear-gradient(
      135deg,
      var(--color-primary-600),
      var(--color-primary-700)
    );
    color: white;
    border: none;
    border-radius: var(--border-radius-full);
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    cursor: pointer;
    transition: all var(--duration-300) var(--ease-in-out);
    overflow: hidden;
    box-shadow: 0 8px 24px rgba(147, 51, 234, 0.3);
  }

  .play-now-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 40px rgba(147, 51, 234, 0.4);
  }

  .play-now-btn:active {
    transform: translateY(-1px);
  }

  .btn-content {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    position: relative;
    z-index: 1;
  }

  .btn-ripple {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }

  .play-now-btn:hover .btn-ripple {
    transform: translateX(100%);
  }

  .share-btn {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-4) var(--space-6);
    background: rgba(255, 255, 255, 0.9);
    color: var(--color-gray-700);
    border: 1px solid var(--color-gray-300);
    border-radius: var(--border-radius-full);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    cursor: pointer;
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .share-btn:hover {
    background: white;
    color: var(--color-primary-600);
    border-color: var(--color-primary-300);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  /* ==========================================================================
     游戏特色区域增强
     ========================================================================== */

  .game-features-enhanced {
    padding: var(--space-16) 0;
    background: linear-gradient(
      135deg,
      var(--color-gray-50),
      var(--color-gray-100)
    );
    position: relative;
    overflow: hidden;
  }

  .game-features-enhanced::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(147, 51, 234, 0.02),
      transparent
    );
    pointer-events: none;
  }

  .section-header-enhanced {
    text-align: center;
    margin-bottom: var(--space-12);
  }

  .section-title-enhanced {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-4);
    font-size: var(--font-size-4xl);
    font-weight: var(--font-weight-bold);
    background: linear-gradient(
      135deg,
      var(--color-primary-600),
      var(--color-primary-700)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: var(--space-4);
  }

  .section-title-enhanced i {
    color: var(--color-primary-600);
    background: none;
    -webkit-text-fill-color: var(--color-primary-600);
    font-size: var(--font-size-3xl);
  }

  .section-subtitle-enhanced {
    font-size: var(--font-size-xl);
    color: var(--color-gray-600);
    max-width: 700px;
    margin: 0 auto;
    line-height: var(--line-height-relaxed);
  }

  /* 特色功能网格 */
  .features-showcase {
    max-width: 1200px;
    margin: 0 auto;
  }

  .features-grid-enhanced {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: var(--space-8);
  }

  .feature-card-enhanced {
    position: relative;
    height: 100%;
  }

  .feature-card-content {
    position: relative;
    padding: var(--space-8);
    height: 100%;
    border-radius: var(--border-radius-xl);
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-4);
    transition: all var(--duration-300) var(--ease-in-out);
    overflow: hidden;
  }

  .feature-card-content:hover {
    transform: translateY(-6px);
    box-shadow: 0 25px 60px rgba(0, 0, 0, 0.15);
  }

  .feature-icon-enhanced {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 80px;
    height: 80px;
    background: linear-gradient(
      135deg,
      var(--color-primary-500),
      var(--color-primary-600)
    );
    border-radius: var(--border-radius-2xl);
    color: white;
    font-size: var(--font-size-2xl);
    box-shadow: 0 12px 30px rgba(147, 51, 234, 0.3);
    margin-bottom: var(--space-4);
  }

  .feature-title-enhanced {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-900);
    margin-bottom: var(--space-3);
  }

  .feature-description-enhanced {
    font-size: var(--font-size-base);
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    flex: 1;
  }

  .feature-glow-effect {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(147, 51, 234, 0.1),
      transparent
    );
    transform: translateX(-100%);
    transition: transform 0.8s ease;
    pointer-events: none;
  }

  .feature-card-content:hover .feature-glow-effect {
    transform: translateX(100%);
  }

  /* 游戏步骤 */
  .how-to-play-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .steps-container-enhanced {
    display: flex;
    flex-direction: column;
    gap: var(--space-6);
  }

  .step-item-enhanced {
    display: flex;
    align-items: flex-start;
    gap: var(--space-6);
    padding: var(--space-6);
    background: var(--color-white);
    border-radius: var(--border-radius-xl);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all var(--duration-300) var(--ease-in-out);
    border-left: 4px solid var(--color-primary-500);
  }

  .step-item-enhanced:hover {
    transform: translateX(8px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  .step-number-enhanced {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    background: linear-gradient(
      135deg,
      var(--color-primary-500),
      var(--color-primary-600)
    );
    color: white;
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    border-radius: var(--border-radius-full);
    flex-shrink: 0;
    box-shadow: 0 8px 20px rgba(147, 51, 234, 0.3);
  }

  .step-content-enhanced {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }

  .step-title-enhanced {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-900);
    margin: 0;
  }

  .step-description-enhanced {
    font-size: var(--font-size-base);
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    margin: 0;
  }

  /* 内容区域 */
  .game-content-section {
    padding: var(--space-12) 0;
  }

  .content-wrapper-enhanced {
    max-width: 1000px;
    margin: 0 auto;
  }

  .content-card-enhanced {
    padding: var(--space-10);
    border-radius: var(--border-radius-2xl);
    position: relative;
    overflow: hidden;
  }

  .content-title-enhanced {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    font-size: var(--font-size-3xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-900);
    margin-bottom: var(--space-8);
    text-align: center;
    justify-content: center;
  }

  .content-title-enhanced i {
    color: var(--color-primary-600);
    font-size: var(--font-size-2xl);
  }

  .content-body-enhanced {
    display: flex;
    flex-direction: column;
    gap: var(--space-6);
  }

  .content-paragraph-enhanced p {
    font-size: var(--font-size-lg);
    color: var(--color-gray-700);
    line-height: var(--line-height-relaxed);
    text-align: center;
    margin: 0;
  }

  .content-list-enhanced {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6);
  }

  .content-list-item-enhanced {
    display: flex;
    align-items: flex-start;
    gap: var(--space-4);
    padding: var(--space-5);
    background: var(--color-gray-50);
    border-radius: var(--border-radius-lg);
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .content-list-item-enhanced:hover {
    background: var(--color-primary-50);
    transform: translateY(-2px);
  }

  .list-item-icon {
    color: var(--color-primary-600);
    font-size: var(--font-size-lg);
    margin-top: var(--space-1);
  }

  .list-item-content {
    flex: 1;
  }

  .list-item-title {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-900);
    margin: 0 0 var(--space-1) 0;
  }

  .list-item-description {
    font-size: var(--font-size-sm);
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    margin: 0;
  }

  /* 内容区域中的步骤样式 */
  .content-steps-enhanced {
    margin: var(--space-6) 0;
  }

  .content-steps-enhanced .steps-container-enhanced {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }

  .content-steps-enhanced .step-item-enhanced {
    display: flex;
    align-items: flex-start;
    gap: var(--space-4);
    padding: var(--space-4);
    background: var(--color-white);
    border-radius: var(--border-radius-lg);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    transition: all var(--duration-300) var(--ease-in-out);
    border-left: 3px solid var(--color-primary-400);
  }

  .content-steps-enhanced .step-item-enhanced:hover {
    transform: translateX(4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  }

  .content-steps-enhanced .step-number-enhanced {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    background: linear-gradient(
      135deg,
      var(--color-primary-400),
      var(--color-primary-500)
    );
    color: white;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-bold);
    border-radius: var(--border-radius-full);
    flex-shrink: 0;
    box-shadow: 0 4px 12px rgba(147, 51, 234, 0.2);
  }

  .content-steps-enhanced .step-content-enhanced {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }

  .content-steps-enhanced .step-title-enhanced {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-900);
    margin: 0;
  }

  .content-steps-enhanced .step-description-enhanced {
    font-size: var(--font-size-sm);
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    margin: 0;
  }

  /* 相关游戏 */
  .related-games-enhanced {
    padding: var(--space-16) 0;
    background: linear-gradient(
      135deg,
      var(--color-gray-50),
      var(--color-gray-100)
    );
  }

  .related-games-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--space-6);
    margin-top: var(--space-8);
  }

  .related-game-item {
    transition: transform var(--duration-300) var(--ease-in-out);
  }

  .related-game-item:hover {
    transform: translateY(-4px);
  }

  /* 动画增强 */
  .music-element {
    opacity: 0;
    transform: translateY(30px);
    transition: all var(--duration-500) var(--ease-out);
  }

  .music-element.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* 不同内容区域的颜色主题 */
  .content-section-introduction {
    background: linear-gradient(
      135deg,
      rgba(59, 130, 246, 0.03),
      rgba(147, 51, 234, 0.03)
    );
  }

  .content-section-features {
    background: linear-gradient(
      135deg,
      rgba(16, 185, 129, 0.03),
      rgba(5, 150, 105, 0.03)
    );
  }

  .content-section-gameplay {
    background: linear-gradient(
      135deg,
      rgba(245, 158, 11, 0.03),
      rgba(217, 119, 6, 0.03)
    );
  }

  .content-section-advantages {
    background: linear-gradient(
      135deg,
      rgba(239, 68, 68, 0.03),
      rgba(220, 38, 38, 0.03)
    );
  }

  .content-section-accessibility {
    background: linear-gradient(
      135deg,
      rgba(139, 92, 246, 0.03),
      rgba(124, 58, 237, 0.03)
    );
  }

  .content-section-other {
    background: linear-gradient(
      135deg,
      rgba(6, 182, 212, 0.03),
      rgba(8, 145, 178, 0.03)
    );
  }

  .content-section-conclusion {
    background: linear-gradient(
      135deg,
      rgba(168, 85, 247, 0.03),
      rgba(147, 51, 234, 0.03)
    );
  }

  /* ==========================================================================
     响应式设计
     ========================================================================== */

  @media (max-width: 1024px) {
    .hero-layout-grid {
      grid-template-columns: 1fr 1fr;
      gap: var(--space-6);
    }

    .hero-game-container {
      height: 500px;
    }

    .hero-game-iframe-container {
      height: calc(500px - 60px);
    }
  }

  @media (max-width: 768px) {
    .game-hero-immersive {
      min-height: auto;
      padding: calc(80px + var(--space-2)) 0 var(--space-4);
    }

    .hero-layout-grid {
      grid-template-columns: 1fr;
      gap: var(--space-4);
      min-height: auto;
    }

    .hero-game-container {
      height: 400px;
      order: -1;
    }

    .hero-game-iframe-container {
      height: calc(400px - 50px);
    }

    .hero-game-header {
      padding: var(--space-3);
    }

    .hero-control-btn {
      width: 32px;
      height: 32px;
    }

    .game-title-enhanced {
      font-size: var(--font-size-3xl);
    }

    .game-description-enhanced {
      font-size: var(--font-size-lg);
    }
  }

  @media (max-width: 480px) {
    .game-hero-immersive {
      padding: calc(80px + var(--space-1)) 0 var(--space-2);
    }

    .hero-layout-grid {
      gap: var(--space-3);
    }

    .hero-game-container {
      height: 350px;
    }

    .hero-game-iframe-container {
      height: calc(350px - 45px);
    }

    .hero-game-header {
      padding: var(--space-2);
    }

    .hero-game-active-title {
      font-size: var(--font-size-base);
    }

    .hero-control-btn {
      width: 28px;
      height: 28px;
    }

    .game-title-enhanced {
      font-size: var(--font-size-2xl);
    }

    .game-description-enhanced {
      font-size: var(--font-size-base);
    }

    .play-now-btn {
      padding: var(--space-3) var(--space-6);
    }
  }
</style>
