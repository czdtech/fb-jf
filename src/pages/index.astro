---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Navigation from '@/components/Navigation.astro'
import Footer from '@/components/Footer.astro'

// Import new clean sections with shadcn/ui
import HeroSectionNew from '@/components/sections/HeroSectionNew.astro'
import HowToPlaySection from '@/components/sections/HowToPlaySection.astro'
import AboutSection from '@/components/sections/AboutSection.astro'
import SoundSamplesSection from '@/components/sections/SoundSamplesSection.astro'
import VideosSection from '@/components/sections/VideosSection.astro'
import FAQSection from '@/components/sections/FAQSection.astro'

// Import data
import { getCollection } from 'astro:content';
import extractedData from '@/data/extracted-data.json'

const { navigation, homepage } = extractedData

// Fetch all games and filter them by category
const allGames = await getCollection('games');
const popularGames = allGames.filter(game => game.data.category === 'popular').slice(0, 5);
const newGames = allGames.filter(game => game.data.category === 'new').slice(0, 5);
const trendingGames = allGames.filter(game => game.data.category === 'trending').slice(0, 10);

const games = {
  popular: popularGames.map(g => ({ slug: g.slug, ...g.data })),
  new: newGames.map(g => ({ slug: g.slug, ...g.data })),
  trending: trendingGames.map(g => ({ slug: g.slug, ...g.data })),
};

// 多语言配置
const hreflangLinks = navigation.languages.map((lang: any) => ({
  code: lang.code === 'en' ? 'x-default' : lang.code,
  url: `https://www.playfiddlebops.com${lang.url}`,
  label: lang.label,
}))

// 结构化数据
const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Game',
  name: homepage.meta?.title || 'FiddleBops - Play Music Games',
  alternateName: 'playfiddlebops.com',
  url: homepage.meta?.canonical || 'https://www.playfiddlebops.com/',
  description: homepage.meta?.description || 'Create your unique music with FiddleBops!',
}
---

<BaseLayout
  meta={homepage.meta}
  lang="en"
  hreflang={hreflangLinks}
  structuredData={structuredData}
>
  <Navigation
    navigation={navigation.main}
    languages={navigation.languages}
    currentLang="en"
    currentPath="/"
  />

  <main id="main-content" class="min-h-screen" role="main">
    <!-- Clean Hero Section with shadcn/ui components -->
    <HeroSectionNew hero={homepage.hero} games={games} />

    <!-- How to Play Section -->
    <HowToPlaySection />

    <!-- About Section -->
    <AboutSection />

    <!-- Sound Samples Section -->
    <SoundSamplesSection soundSamples={homepage.soundSamples} />

    <!-- Video Section -->
    <VideosSection />

    <!-- FAQ Section -->
    <FAQSection />

  </main>

  <Footer />
</BaseLayout>

<!-- 引入交互系统 -->
<script>
  import '@/scripts/interactions.js'
</script>

<!-- 音频播放器脚本 - 已模块化，使用统一的音频管理器 -->
<script>
  import '@/scripts/sound-sample-player.js'
</script>

<!-- 音符点击动画 - 已模块化，使用统一的音符动画模块 -->
<script>
  import { musicNotesAnimation } from '@/scripts/music-notes-animation.js'

  document.addEventListener('DOMContentLoaded', function () {
    // 点击事件监听（带节流）- 全局音符效果
    let lastClick = 0
    document.body.addEventListener('click', function (e) {
      const now = Date.now()
      if (now - lastClick < 200) return
      lastClick = now

      // 使用模块化的音符动画
      musicNotesAnimation.createClickAnimation(e, {
        noteCount: Math.floor(Math.random() * 3) + 1,
        staggerDelay: 100,
        duration: 1200
      })
    })
  })
</script>

<style>
  /* Minimal custom styles - most styling now handled by Tailwind utilities */
  
  /* Font loading optimization */
  * {
    font-display: swap;
  }

  /* Image optimization */
  img {
    max-width: 100%;
    height: auto;
  }

  .game-iframe-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Scroll animations using Tailwind-compatible approach */
  .scroll-animate {
    @apply opacity-0 translate-y-8 transition-all duration-700 ease-out;
  }

  .scroll-animate.animate {
    @apply opacity-100 translate-y-0;
  }
</style>
