---
import BaseLayout from '@/layouts/BaseLayout.astro'
import Navigation from '@/components/Navigation.astro'
import Footer from '@/components/Footer.astro'

// Import new clean sections with shadcn/ui
import HeroSectionNew from '@/components/sections/HeroSectionNew.astro'
import HowToPlaySection from '@/components/sections/HowToPlaySection.astro'
import AboutSection from '@/components/sections/AboutSection.astro'
import SoundSamplesSection from '@/components/sections/SoundSamplesSection.astro'
import VideosSection from '@/components/sections/VideosSection.astro'
import FAQSection from '@/components/sections/FAQSection.astro'

// Import i18n system
import { getCollection } from 'astro:content';
import { getTranslation, SUPPORTED_LOCALES, LOCALE_NAMES, type SupportedLocale } from '@/i18n/utils';
import { getAbsoluteLocaleUrl } from 'astro:i18n';
import { generateHomeHreflangLinks } from '@/utils/hreflang';

// 获取当前语言 - 使用Astro官方i18n系统
const currentLocale: SupportedLocale = (Astro.currentLocale as SupportedLocale) || 'en';

// 获取翻译内容
const translation = await getTranslation(currentLocale);
const uiText = translation.ui;
const homeContent = translation.home;

// 获取当前语言的游戏，支持fallback策略
let allGames = await getCollection('games', (entry) => {
  return entry.id.startsWith(`${currentLocale}/`);
});

// Fallback策略：如果当前语言没有游戏，fallback到英文
if (allGames.length === 0 && currentLocale !== 'en') {
  allGames = await getCollection('games', (entry) => {
    return entry.id.startsWith('en/');
  });
}

// 如果英文也没有，使用任何可用的语言
if (allGames.length === 0) {
  const allAvailableGames = await getCollection('games');
  allGames = allAvailableGames.slice(0, 70); // 限制数量避免性能问题
}

const popularGames = allGames.filter((game: any) => game.data.category === 'popular').slice(0, 5);
const newGames = allGames.filter((game: any) => game.data.category === 'new').slice(0, 5);
const trendingGames = allGames.filter((game: any) => game.data.category === 'trending').slice(0, 10);

const games = {
  popular: popularGames.map((g: any) => ({ slug: g.slug, ...g.data })),
  new: newGames.map((g: any) => ({ slug: g.slug, ...g.data })),
  trending: trendingGames.map((g: any) => ({ slug: g.slug, ...g.data })),
};

// 生成 hreflang 链接（对齐 BaseLayout 期望的 { code, url, label } 结构）
const SITE_URL = (import.meta.env.PUBLIC_SITE_URL || 'https://www.playfiddlebops.com').replace(/\/$/, '');
const languages = Object.entries(LOCALE_NAMES).map(([code, label]) => ({
  code,
  label,
  url: ''
}));
const hreflangLinks = generateHomeHreflangLinks(languages as any, SITE_URL);

// 构建页面meta数据
const pageMeta = {
  title: uiText?.meta?.title || 'FiddleBops - Play Music Games',
  description: uiText?.meta?.description || 'Create your unique music with FiddleBops!',
  keywords: uiText?.meta?.keywords || 'fiddlebops, music games, music creation',
  canonical: getAbsoluteLocaleUrl(currentLocale, '/'),
  ogImage: 'https://www.playfiddlebops.com/images/fiddlebops-og.jpg'
};

// 默认音频样本数据（保持兼容性）
const defaultSoundSamples = {
  title: uiText?.sections?.about || 'Sound Samples',
  samples: [
    {
      name: 'Beat 1',
      audioSrc: '/audio/beat1.mp3',
      color: '#FF6B6B'
    },
    {
      name: 'Beat 2',
      audioSrc: '/audio/beat2.mp3',
      color: '#4ECDC4'
    },
    {
      name: 'Beat 3',
      audioSrc: '/audio/beat3.mp3',
      color: '#45B7D1'
    }
  ]
};

// 结构化数据：网站级（首页） + 视频 JSON-LD（合并为 @graph）
const websiteNode = {
  '@type': 'WebSite',
  name: pageMeta.title,
  alternateName: 'playfiddlebops.com',
  url: pageMeta.canonical,
  description: pageMeta.description,
};

const videoObjects = [
  {
    '@type': 'VideoObject',
    name: 'FIDDLEBOPS ALL POLOS 4K (WITH SUBTITLES) #4',
    description: 'FIDDLEBOPS ALL POLOS 4K (WITH SUBTITLES) #4',
    thumbnailUrl: ['https://i.ytimg.com/vi/4Oj-dVLSA70/hqdefault.jpg'],
    uploadDate: '2024-11-14',
    embedUrl: 'https://www.youtube.com/embed/4Oj-dVLSA70',
    contentUrl: 'https://www.youtube.com/watch?v=4Oj-dVLSA70',
    publisher: { '@type': 'Organization', name: 'Mozziface' },
  },
  {
    '@type': 'VideoObject',
    name: 'Every Incredibox FiddleBops in 8 Minutes',
    description: 'Every Incredibox FiddleBops in 8 Minutes',
    thumbnailUrl: ['https://i.ytimg.com/vi/JlMa-fRBOwE/hqdefault.jpg'],
    uploadDate: '2024-12-29',
    embedUrl: 'https://www.youtube.com/embed/JlMa-fRBOwE',
    contentUrl: 'https://www.youtube.com/watch?v=JlMa-fRBOwE',
    publisher: { '@type': 'Organization', name: 'PlayGameWithZubby' },
  },
];

const structuredData = {
  '@context': 'https://schema.org',
  '@graph': [websiteNode, ...videoObjects],
};
---

<BaseLayout
  meta={pageMeta}
  lang={currentLocale}
  hreflang={hreflangLinks}
  structuredData={structuredData}
>
  <Navigation
    locale={currentLocale}
    currentPath="/"
  />

  <main id="main-content" class="min-h-screen" role="main">
    <!-- Clean Hero Section with shadcn/ui components -->
    <HeroSectionNew
      hero={{
        title: uiText?.hero?.title || 'Create Amazing Music with FiddleBops',
        description: uiText?.hero?.subtitle || 'Interactive music creation games with fun characters and unlimited creativity',
        mainGame: {
          iframe: 'https://fiddlebops.netlify.app/',
          backgroundImage: '/tw.jpg'
        }
      }}
      games={games}
    />

    <!-- How to Play Section -->
    <HowToPlaySection />

    <!-- About Section -->
    <AboutSection />

    <!-- Sound Samples Section -->
    <SoundSamplesSection soundSamples={defaultSoundSamples.samples} />

    <!-- Video Section -->
    <VideosSection />

    <!-- FAQ Section -->
    <FAQSection />

  </main>

  <Footer />
</BaseLayout>

  <!-- 交互系统已由 BaseLayout 全局引入 -->

  <!--
    AURA-X: Modify - 首页脚本治理（B-1）。Confirmed via 寸止。
    - 移除全局 body 级监听与同步模块导入
    - 当 `.sound-samples-section` 接近视窗时再动态加载脚本
    - 仅在该区块内绑定点击音符动画（节流）
  -->
  <script type="module" is:inline>
    const scheduleLoad = () => {
      const section = document.querySelector('.sound-samples-section');
      if (!section) return;

      const loadModules = async () => {
        try {
          const [notesMod] = await Promise.all([
            import('/src/scripts/music-notes-animation.js'),
            // 音频管理器脚本具有副作用：初始化卡片事件，无需导出
            import('/src/scripts/sound-sample-player.js'),
          ]);
          const { musicNotesAnimation } = notesMod;

          // 仅在声音示例区块内绑定点击动画，避免全局监听
          let last = 0;
          section.addEventListener('click', (e) => {
            const now = Date.now();
            if (now - last < 200) return;
            last = now;
            musicNotesAnimation?.createClickAnimation?.(e, {
              noteCount: Math.floor(Math.random() * 3) + 1,
              staggerDelay: 100,
              duration: 1200,
            });
          }, { passive: true });
        } catch (err) {
          console.warn('[index] 延迟加载交互脚本失败', err);
        }
      };

      if ('IntersectionObserver' in window) {
        const io = new IntersectionObserver((entries) => {
          if (entries.some((en) => en.isIntersecting)) {
            io.disconnect();
            loadModules();
          }
        }, { rootMargin: '200px' });
        io.observe(section);
      } else if ('requestIdleCallback' in window) {
        // 兜底：空闲时加载
        // @ts-ignore
        requestIdleCallback(() => loadModules());
      } else {
        setTimeout(() => loadModules(), 1);
      }
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', scheduleLoad);
    } else {
      scheduleLoad();
    }
  </script>

<style>
  /* Minimal custom styles - most styling now handled by Tailwind utilities */

  /* Font loading optimization */
  * {
    font-display: swap;
  }

  /* Image optimization */
  img {
    max-width: 100%;
    height: auto;
  }

  .game-iframe-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Scroll animations using Tailwind-compatible approach */
  .scroll-animate {
    @apply opacity-0 translate-y-8 transition-all duration-700 ease-out;
  }

  .scroll-animate.animate {
    @apply opacity-100 translate-y-0;
  }
</style>
