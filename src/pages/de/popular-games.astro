---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Navigation from '@/components/Navigation.astro';
import Footer from '@/components/Footer.astro';
import GamesList from '@/components/GamesList.astro';
import Pagination from '@/components/Pagination.astro';
import EmptyState from '@/components/EmptyState.astro';
import GameErrorBoundary from '@/components/GameErrorBoundary.astro';
import { getTranslation } from '@/i18n/utils';
import { getLocalizedGamesList } from '@/utils/i18n';
import type { SupportedLocale } from '@/i18n/types';

// Import centralized utilities
import { GAME_CATEGORIES } from '@/config/pagination';
import { 
  validatePageNumber, 
  calculatePagination, 
  filterGamesByCategory,
  generatePaginationUrls 
} from '@/utils/pagination';

// 导入数据
import extractedData from '@/data/extracted-data.json';
const { navigation } = extractedData;

// 使用Astro官方i18n系统 - 复用首页成功模式
const currentLocale: SupportedLocale = (Astro.currentLocale as SupportedLocale) || 'en';
const { ui } = await getTranslation(currentLocale);

// 获取本地化的游戏集合 - 使用统一的错误处理
let localizedGames: any[] = [];
let gameLoadError: string | undefined;

try {
  localizedGames = await getLocalizedGamesList(currentLocale);
  if (!localizedGames || localizedGames.length === 0) {
    localizedGames = await getLocalizedGamesList('en');
  }
} catch (error) {
  gameLoadError = `Failed to load games for locale ${currentLocale}: ${error}`;
  console.error(`[de/popular-games] ${gameLoadError}`);
  
  try {
    localizedGames = await getLocalizedGamesList('en');
  } catch (fallbackError) {
    gameLoadError = `Failed to load fallback English games: ${fallbackError}`;
    console.error(gameLoadError);
    localizedGames = [];
  }
}

// 获取URL参数中的页码 - 使用验证函数
const url = new URL(Astro.request.url);
const currentPage = validatePageNumber(url.searchParams.get('page'));

// 筛选流行游戏 - 使用工具函数
const allPopularGames = filterGamesByCategory(localizedGames, GAME_CATEGORIES.POPULAR);

// 计算分页 - 使用工具函数
const paginationResult = calculatePagination(allPopularGames, currentPage);

// 生成分页URL
const paginationUrls = generatePaginationUrls(
  '/de/popular-games', 
  paginationResult.currentPage, 
  paginationResult.totalPages
);

// SEO配置
const meta = {
  title: ui.sections?.popularGames ? `${ui.sections.popularGames} - Fiddlebops` : 'Popular Games - Fiddlebops',
  description: '最受欢迎的 Fiddlebops 游戏合集'
};
---

<BaseLayout 
  title={meta.title}
  description={meta.description}
  currentLocale={currentLocale}
>
  <Navigation 
    navigation={navigation.main} 
    currentLocale={currentLocale}
  />
  
  <main class="main">
    <div class="container">
      <h1 class="page-title">
        {ui.sections?.popularGames || 'Popular Games'}
      </h1>
      
      {gameLoadError ? (
        <GameErrorBoundary 
          error={gameLoadError}
          category="popular games"
          fallbackMessage="We encountered an issue loading the popular games. Please try refreshing the page."
        />
      ) : paginationResult.isEmpty ? (
        <EmptyState 
          category="popular"
          title="No Popular Games Found"
          description="There are currently no popular games available. Please check back later or browse other categories."
          backButtonText="Browse All Games"
          backButtonUrl="/games/"
        />
      ) : (
        <>
          <GamesList 
            games={paginationResult.games}
            currentLocale={currentLocale}
          />
          
          {paginationResult.totalPages > 1 && (
            <Pagination 
              currentPage={paginationResult.currentPage}
              totalPages={paginationResult.totalPages}
              basePath="/de/popular-games"
              currentLocale={currentLocale}
            />
          )}
        </>
      )}
    </div>
  </main>
  
  <Footer currentLocale={currentLocale} />
</BaseLayout>

<style>
.main {
  padding: 2rem 0;
  min-height: 70vh;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.page-title {
  font-size: 2.5rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 3rem;
  color: var(--text-primary);
}

@media (max-width: 768px) {
  .page-title {
    font-size: 2rem;
    margin-bottom: 2rem;
  }
}
</style>