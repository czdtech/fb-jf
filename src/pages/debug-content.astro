---
import { getCollection } from "astro:content";

// Ëøô‰∏™È°µÈù¢Áî®‰∫éË∞ÉËØïÂÜÖÂÆπÈõÜÂêàÂä†ËΩΩÈóÆÈ¢ò
console.log("üîç Testing content collection loading...");

let allGames = [];
let errorMessage = "";

try {
  allGames = await getCollection("games");
  
  console.log(`üìä Total games loaded: ${allGames.length}`);
  
  // ÊåâËØ≠Ë®ÄÂàÜÁ±ªÁªüËÆ°
  const stats = {
    en: 0,
    zh: 0,
    es: 0,
    fr: 0,
    de: 0,
    ja: 0,
    ko: 0
  };
  
  for (const game of allGames) {
    const gameId = game.id.replace(/\.md$/, "");
    
    if (gameId.includes("/")) {
      // Â§öËØ≠Ë®ÄÊ∏∏ÊàèÔºö{locale}/{slug}
      const [locale] = gameId.split("/");
      if (stats[locale] !== undefined) {
        stats[locale]++;
      }
    } else {
      // Ëã±ÊñáÊ∏∏ÊàèÔºö{slug}
      stats.en++;
    }
  }
  
  // ÊâìÂç∞ÁªüËÆ°‰ø°ÊÅØ
  console.log("üìä Games by language:");
  for (const [lang, count] of Object.entries(stats)) {
    console.log(`  ${lang}: ${count} games`);
  }
  
  // Ê£ÄÊü•ÁâπÂÆöÊ∏∏ÊàèÁöÑÊâÄÊúâÁâàÊú¨
  console.log("üîç Checking 'ayocs-sprunkr' across all languages:");
  const ayocsGames = allGames.filter(game => {
    return game.data.slug === "ayocs-sprunkr";
  });
  
  console.log(`Found ${ayocsGames.length} versions of 'ayocs-sprunkr':`);
  for (const game of ayocsGames) {
    console.log(`  ID: ${game.id}`);
    console.log(`  Title: ${game.data.title}`);
    console.log(`  Slug: ${game.data.slug}`);
    console.log(`  First 50 chars: ${game.data.description.substring(0, 50)}...`);
  }
  
} catch (error) {
  console.error("‚ùå Error loading games:", error);
  errorMessage = error.toString();
}

const stats = {
  en: 0,
  zh: 0,
  es: 0,
  fr: 0,
  de: 0,
  ja: 0,
  ko: 0
};

for (const game of allGames) {
  const gameId = game.id.replace(/\.md$/, "");
  
  if (gameId.includes("/")) {
    const [locale] = gameId.split("/");
    if (stats[locale] !== undefined) {
      stats[locale]++;
    }
  } else {
    stats.en++;
  }
}

const ayocsGames = allGames.filter(game => game.data.slug === "ayocs-sprunkr");
---

<!DOCTYPE html>
<html>
<head>
    <title>Content Collection Debug</title>
    <style>
        body { font-family: monospace; padding: 20px; background: #f0f0f0; }
        .stats { background: white; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .error { background: #fee; border: 1px solid red; color: red; }
        .success { background: #efe; border: 1px solid green; color: green; }
    </style>
</head>
<body>
    <h1>Content Collection Debug Page</h1>
    
    {errorMessage ? (
        <div class="stats error">
            <h2>‚ùå Error</h2>
            <p>{errorMessage}</p>
        </div>
    ) : (
        <div class="stats success">
            <h2>‚úÖ Content Collection Loaded</h2>
            <p><strong>Total games:</strong> {allGames.length}</p>
        </div>
    )}
    
    <div class="stats">
        <h2>üìä Games by Language</h2>
        <ul>
            {Object.entries(stats).map(([lang, count]) => (
                <li><strong>{lang}:</strong> {count} games</li>
            ))}
        </ul>
    </div>
    
    <div class="stats">
        <h2>üîç 'ayocs-sprunkr' Game Versions</h2>
        <p><strong>Found {ayocsGames.length} versions:</strong></p>
        {ayocsGames.map(game => (
            <div style="background: #f9f9f9; padding: 10px; margin: 5px 0; border-left: 3px solid #007acc;">
                <p><strong>ID:</strong> {game.id}</p>
                <p><strong>Title:</strong> {game.data.title}</p>
                <p><strong>Slug:</strong> {game.data.slug}</p>
                <p><strong>Description preview:</strong> {game.data.description.substring(0, 100)}...</p>
            </div>
        ))}
    </div>
</body>
</html>