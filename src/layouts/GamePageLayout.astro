---
import BaseLayout from './BaseLayout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import GameRating from '@/components/GameRating.astro'

// 导入新的游戏页面Section组件
import GameHeroSection from '@/components/sections/GameHeroSection.astro'
import GameMainSection from '@/components/sections/GameMainSection.astro'
import GameFeaturesSection from '@/components/sections/GameFeaturesSection.astro'
import GameHowToPlaySection from '@/components/sections/GameHowToPlaySection.astro'
import GameRelatedSection from '@/components/sections/GameRelatedSection.astro'

// 导入数据
import extractedData from '@/data/extracted-data.json'

const { navigation, games } = extractedData

export interface Props {
  meta: {
    title: string
    description: string
    keywords?: string
    canonical: string
    ogImage: string
  }
  gameData: {
    id: string
    slug: string
    title: string
    description: string
    iframe: string
    backgroundImage: string
    category: string
    rating?: {
      score: number
      maxScore: number
      votes: number
      stars: number
    }
    features?: string[]
    howToPlay?: string[]
  }
  gameContent?: any
  breadcrumb?: {
    home: string
    current: string
  }
  pageType?: string
  isDemo?: boolean
  schemaData?: any
}

const {
  meta,
  gameData,
  gameContent,
  breadcrumb,
  pageType,
  isDemo,
  schemaData,
} = Astro.props

// 多语言配置
const hreflangLinks = navigation.languages.map(lang => ({
  code: lang.code === 'en' ? 'x-default' : lang.code,
  url:
    meta.canonical.replace('https://www.playfiddlebops.com', '') +
    (lang.code !== 'en' ? lang.url.replace('/', '') + '/' : ''),
  label: lang.label,
}))

// 增强的结构化数据，使用来自games-extended.json的schema数据
const structuredData = schemaData
  ? {
      '@context': 'https://schema.org',
      '@type': 'Game',
      ...schemaData,
      // 添加评分信息到结构化数据
      ...(gameData.rating && {
        aggregateRating: {
          '@type': 'AggregateRating',
          ratingValue: gameData.rating.score,
          bestRating: gameData.rating.maxScore,
          ratingCount: gameData.rating.votes,
        },
      }),
    }
  : {
      '@context': 'https://schema.org',
      '@type': 'Game',
      name: gameData.title,
      alternateName: 'playfiddlebops.com',
      url: meta.canonical,
      description: meta.description,
      ...(gameData.rating && {
        aggregateRating: {
          '@type': 'AggregateRating',
          ratingValue: gameData.rating.score,
          bestRating: gameData.rating.maxScore,
          ratingCount: gameData.rating.votes,
        },
      }),
    }

// 从URL中提取当前游戏的slug
const currentGameSlug = gameData.slug

// 提取特色内容 - 增强支持，支持多种数据结构
const featuresContent = gameContent?.features
const otherContent = gameContent?.other
const introductionContent = gameContent?.introduction
const gameplayContent = gameContent?.gameplay

// 优先显示 other 内容，如果没有则使用 introduction
const displayContent = otherContent || introductionContent || gameplayContent
---

<BaseLayout
  meta={meta}
  hreflang={hreflangLinks}
  structuredData={structuredData}
>
  <Header
    navigation={navigation.main}
    languages={navigation.languages}
    currentLang="en"
    currentPath={meta.canonical.replace('https://www.playfiddlebops.com', '')}
  />

  <main>
    <!-- Game Hero Section: 游戏标题和介绍 -->
    <GameHeroSection
      gameData={gameData}
      navigation={navigation}
      breadcrumb={breadcrumb}
    />

    <!-- Game Main Section: 三栏布局 - 游戏主体和侧边栏 -->
    <GameMainSection gameData={gameData} games={games} />

    <!-- Game Rating Section: 详细评分显示 -->
    {
      gameData.rating && (
        <section class="game-rating-section scroll-animate">
          <div class="container">
            <div class="rating-wrapper music-element hero-music-delay-12">
              <GameRating rating={gameData.rating} variant="detailed" />
            </div>
          </div>
        </section>
      )
    }

    <!-- Game Features Section: 使用增强的特色功能显示 -->
    <GameFeaturesSection
      features={gameData.features}
      featuresContent={featuresContent}
      gameTitle={gameData.title}
    />

    <!-- How to Play Section: 游戏玩法说明 -->
    <GameHowToPlaySection
      howToPlay={gameData.howToPlay}
      gameTitle={gameData.title}
    />

    <!-- Enhanced Content Section: 来自games-extended.json的其他详细内容 -->
    {
      displayContent && (
        <section class="game-enhanced-content-section scroll-animate">
          <div class="container">
            <div class="content-wrapper music-element hero-music-delay-25">
              <div class="content-inner hero-sidebar-effect">
                <h2 class="content-title">
                  <i class="fas fa-gamepad" />
                  {displayContent.title}
                </h2>
                <div class="content-body">
                  {displayContent.content.map((section: any, index: number) => {
                    if (section.type === 'paragraph') {
                      return (
                        <div
                          class={`content-paragraph music-element hero-music-delay-${26 + index}`}
                        >
                          <p>{section.text}</p>
                        </div>
                      )
                    } else if (section.type === 'steps') {
                      return (
                        <div
                          class={`steps-container music-element hero-music-delay-${26 + index}`}
                        >
                          <h3 class="steps-title">Step-by-Step Guide:</h3>
                          {section.items.map((step: any, stepIndex: number) => (
                            <div
                              class={`step-item music-element hero-music-delay-${27 + index + stepIndex}`}
                            >
                              <div class="step-number">{stepIndex + 1}</div>
                              <div class="step-content">
                                <h4 class="step-title">{step.title}</h4>
                                <p class="step-description">
                                  {step.description}
                                </p>
                              </div>
                            </div>
                          ))}
                        </div>
                      )
                    } else if (section.type === 'list') {
                      return (
                        <div
                          class={`enhanced-feature-list music-element hero-music-delay-${26 + index}`}
                        >
                          {section.items.map((item: any, itemIndex: number) => (
                            <div
                              class={`enhanced-feature-item music-element hero-music-delay-${27 + index + itemIndex}`}
                            >
                              <div class="feature-icon">
                                <i class="fas fa-check-circle" />
                              </div>
                              <div class="feature-content">
                                <h4 class="feature-title">{item.title}</h4>
                                <p class="feature-description">
                                  {item.description}
                                </p>
                              </div>
                            </div>
                          ))}
                        </div>
                      )
                    }
                    return null
                  })}
                </div>
              </div>
            </div>
          </div>
        </section>
      )
    }

    <!-- Related Games Section: 相关游戏推荐 -->
    <GameRelatedSection games={games} currentGameSlug={currentGameSlug} />
  </main>

  <Footer />
</BaseLayout>

<!-- 引入交互系统 -->
<script>
  import '@/scripts/interactions.js'
</script>

<style>
  /* ==========================================================================
   Game Rating Section
   ========================================================================== */

  .game-rating-section {
    padding: var(--space-8) 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.95),
      rgba(248, 250, 252, 0.98)
    );
  }

  .rating-wrapper {
    max-width: 600px;
    margin: 0 auto;
  }

  /* ==========================================================================
   Enhanced Content Section - 来自games-extended.json的详细内容
   ========================================================================== */

  .game-enhanced-content-section {
    padding: var(--space-12) 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.9),
      rgba(248, 250, 252, 0.95)
    );
  }

  .content-wrapper {
    max-width: 900px;
    margin: 0 auto;
  }

  .content-inner {
    padding: var(--space-8);
    border-radius: var(--border-radius-xl);
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .content-inner:hover {
    transform: translateY(-2px);
    box-shadow:
      0 20px 60px rgba(0, 0, 0, 0.15),
      0 8px 24px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.8);
  }

  .content-title {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    font-size: var(--font-size-2xl);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-900);
    margin-bottom: var(--space-6);
    background: linear-gradient(
      135deg,
      var(--color-primary-600),
      var(--color-primary-700)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .content-title i {
    color: var(--color-primary-600);
    background: none;
    -webkit-text-fill-color: var(--color-primary-600);
  }

  .content-body {
    line-height: var(--line-height-relaxed);
    color: var(--color-gray-700);
  }

  .content-paragraph {
    margin-bottom: var(--space-6);
  }

  .content-paragraph p {
    font-size: var(--font-size-lg);
    line-height: var(--line-height-relaxed);
    color: var(--color-gray-700);
  }

  /* Steps Container - 增强样式 */
  .steps-container {
    margin: var(--space-8) 0;
  }

  .steps-title {
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-800);
    margin-bottom: var(--space-6);
    text-align: center;
  }

  .step-item {
    display: flex;
    gap: var(--space-4);
    margin-bottom: var(--space-6);
    padding: var(--space-5);
    border-radius: var(--border-radius-lg);
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(var(--color-primary-500-rgb), 0.2);
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .step-item:hover {
    background: rgba(255, 255, 255, 0.9);
    border-color: rgba(var(--color-primary-500-rgb), 0.3);
    transform: translateX(var(--space-2));
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
  }

  .step-number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: linear-gradient(
      135deg,
      var(--color-primary-500),
      var(--color-primary-600)
    );
    color: white;
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-xl);
    flex-shrink: 0;
    box-shadow: 0 4px 12px rgba(147, 51, 234, 0.3);
  }

  .step-content {
    flex: 1;
  }

  .step-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-800);
    margin-bottom: var(--space-2);
  }

  .step-description {
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    font-size: var(--font-size-base);
  }

  /* Enhanced Feature List */
  .enhanced-feature-list {
    display: grid;
    gap: var(--space-4);
    margin: var(--space-8) 0;
  }

  .enhanced-feature-item {
    display: flex;
    gap: var(--space-4);
    padding: var(--space-5);
    border-radius: var(--border-radius-lg);
    background: rgba(255, 255, 255, 0.8);
    border-left: 4px solid var(--color-primary-500);
    transition: all var(--duration-300) var(--ease-in-out);
  }

  .enhanced-feature-item:hover {
    background: rgba(255, 255, 255, 0.95);
    transform: translateX(var(--space-2));
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
  }

  .enhanced-feature-item .feature-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: linear-gradient(
      135deg,
      var(--color-primary-500),
      var(--color-primary-600)
    );
    border-radius: var(--border-radius-full);
    color: white;
    font-size: var(--font-size-lg);
    flex-shrink: 0;
  }

  .enhanced-feature-item .feature-content {
    flex: 1;
  }

  .enhanced-feature-item .feature-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-gray-800);
    margin-bottom: var(--space-2);
  }

  .enhanced-feature-item .feature-description {
    color: var(--color-gray-600);
    line-height: var(--line-height-relaxed);
    font-size: var(--font-size-base);
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .game-enhanced-content-section {
      padding: var(--space-10) 0;
    }

    .content-inner {
      padding: var(--space-6);
    }

    .content-title {
      font-size: var(--font-size-xl);
      flex-direction: column;
      gap: var(--space-2);
    }

    .step-item {
      flex-direction: column;
      text-align: center;
      padding: var(--space-4);
    }

    .step-number {
      margin: 0 auto var(--space-3);
      width: 40px;
      height: 40px;
      font-size: var(--font-size-lg);
    }

    .enhanced-feature-item {
      flex-direction: column;
      text-align: center;
      padding: var(--space-4);
    }

    .enhanced-feature-item .feature-icon {
      margin: 0 auto var(--space-3);
    }
  }
</style>
